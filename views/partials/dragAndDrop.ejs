<!-- 칸반보드 s -->
<div class="col" style="margin: 0; padding: 0">
  <div class="demo-container" style="padding: 60px 0 0 20px">
    <div id="kanban"></div>
  </div>
  <div id="lists">
    <button
      class="kanban__add-card"
      type="button"
      id="card_52"
      style="margin-top: 30px"
    >
      카드내용보기
    </button>
  </div>
</div>
<!-- 칸반보드 e -->

<script>
  $(() => {
    // const statuses = [
    //   'Not Started',
    //   'Need Assistance',
    //   'In Progress',
    //   'Deferred',
    //   'Completed',
    // ];

    // 조회
    $(async () => {
      // 현재 URL을 가져옵니다.
      const currentUrl = window.location.href;

      // URL을 파싱하여 pathname을 얻습니다.
      const pathname = new URL(currentUrl).pathname;

      // 경로에서 숫자를 추출합니다.
      const match = pathname.match(/\/board\/(\d+)/);

      // 추출된 값이 있다면, 숫자를 가져옵니다.
      const boardId = match ? match[1] : null;

      // 리스트 조회 및 상태 배열 가져오기
      try {
        const listData = await getList(boardId);

        const statuses = listData.map((list) => list);
        const statusesId = listData.map((list) => list.id);

        // 카드 데이터 가져오기
        const cardDataAll = [];
        for (let i = 0; i < statusesId.length; i++) {
          const cardData = await getCard(statusesId[i]);
          for (let j = 0; j < cardData.length; j++) {
            cardDataAll.push(cardData[j]);
          }
        }

        // Kanban 보드 렌더링
        renderKanban($('#kanban'), statuses, cardDataAll);
      } catch (error) {
        console.error('에러 발생:', error);
      }

      // Kanban 보드 렌더링 함수
      function renderKanban($container, statusList, cardData) {
        // 각 상태에 대한 목록 렌더링
        statusList.forEach((status) => {
          renderList($container, status, cardData);
        });

        // 가로 스크롤 및 정렬 기능 추가
        $container.addClass('scrollable-board').dxScrollView({
          direction: 'horizontal',
          showScrollbar: 'always',
        });

        // 목록 정렬 기능 추가
        $container.addClass('sortable-lists').dxSortable({
          filter: '.list',
          itemOrientation: 'horizontal',
          handle: '.list-title',
          moveItemOnDrop: true,
        });
      }

      // 목록 렌더링 함수
      function renderList($container, status, cardData) {
        // 새로운 목록 컨테이너 생성
        const $list = $('<div>')
          .addClass(`list`)
          .attr('id', `list_1`) //추가
          .appendTo($container);

        // 목록 제목 렌더링
        renderListTitle($list, status.listTitle);

        // 상태에 따라 작업 필터링 및 카드 렌더링
        const listTasks = cardData.filter((card) => card.listsId === status.id);
        renderCards($list, listTasks);
      }

      // 목록 제목 렌더링 함수
      function renderListTitle($container, status) {
        $('<div>')
          .addClass('list-title')
          .addClass('dx-theme-text-color')
          .text(status)
          .appendTo($container);
      }

      // 카드 렌더링 함수
      function renderCards($container, tasks) {
        // 스크롤 가능한 컨테이너 및 카드 컨테이너 생성
        const $scroll = $('<div>').appendTo($container);
        const $items = $('<div>').appendTo($scroll);

        // 각 작업에 대한 카드 렌더링
        tasks.forEach((task) => {
          renderCard($items, task);
        });

        // 세로 스크롤 및 정렬 기능 추가
        $scroll.addClass('scrollable-list').dxScrollView({
          direction: 'vertical',
          showScrollbar: 'always',
        });

        // 카드 정렬 기능 추가
        $items.addClass('sortable-cards').dxSortable({
          group: 'tasksGroup',
          moveItemOnDrop: true,
        });
      }

      // 카드 렌더링 함수
      function renderCard($container, task) {
        // 각 작업에 대한 카드 생성

        const $item = $('<div>')
          .addClass('card')
          .addClass('dx-card')
          .addClass('dx-theme-text-color')
          .addClass('dx-theme-background-color')
          .attr('id', `card_52`) //추가
          .appendTo($container);

        // 카드에 우선 순위, 제목 및 담당자 정보 추가
        $('<div>')
          .addClass('card-priority')
          .addClass(`priority-${Math.floor(Math.random() * 4) + 1}`)
          .appendTo($item);
        $('<div>').addClass('card-subject').text(task.cardName).appendTo($item);
        $('<div>').addClass('card-assignee').text(task.writer).appendTo($item);
      }
    });
  });

  async function fetchData(httpMethod, url) {
    try {
      const response = await axios[httpMethod](url);
      return response.data;
    } catch (error) {
      console.error(`${httpMethod} 요청 에러:`, error);
      throw error; // 에러를 다시 던지거나 다른 처리를 추가할 수 있습니다.
    }
  }

  async function getList(boardId) {
    try {
      const listData = await fetchData(
        'get',
        `http://localhost:3001/api/list/${boardId}`,
      );
      return listData.data;
    } catch (error) {
      // 에러 처리
      console.error('에러 발생:', error);
      throw error;
    }
  }

  async function getCard(listId) {
    console.log('listId', listId);
    try {
      const cardData = await fetchData(
        'get',
        `http://localhost:3001/api/card/list/${listId}`,
      );
      console.log('cardData', cardData);
      return cardData.data.cardList;
    } catch (error) {
      // 에러 처리
      console.error('에러 발생:', error);
      throw error;
    }
  }

  document.addEventListener('DOMContentLoaded', function (e) {
    const listsElement = document.getElementById('lists');
    console.log('리스트1', listsElement);
    listsElement.addEventListener('click', function (e) {
      console.log('클릭클릭');
      e.stopPropagation();

      const cardNum = e.target.id.split('_')[1];
      console.log('카드번호 클릭한애', cardNum);

      let showModal = document.createElement('div');

      axios
        .get(`/api/card/${cardNum}`, {})
        .then(async (res) => {
          console.log(res);
          console.log('카드정보 가져오고있음', res.data.data);
          const resData = res.data.data;

          const modalHtml = `
                <div class="modal fade"   id="exampleModal_cardDetailShow_1" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                  <div class="modal-dialog flex">
                    <div class="modal-content round modalSize" id="cardDetailModal">
                      <div class = "cardDetailTop" id="cardColor"></div>

                      <div class="modal-header column eraseLine mainModal" >
                        <h4 class="leftText boled modal-title fs-5j" id="exampleModalLabel">
                          <i class="fa-regular fa-rectangle-list" style="color: #b7bdc8;"></i>
                          <div class = "cardTitleInput" id="cardTitleInput">${resData.cardName}</div>
                        </h4>
                        <p class = "inLeftText grey small">list: 속해있는 리스트 이름이 들어갑니다.</p>
                        <div class="dropdown">
                          <div style="margin-left: 33px;">
                            <button class="btn btn-outline-secondary dropdown-toggle" id="choiceBackgroundColor" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                              choice color
                            </button>
                            <ul class="dropdown-menu">
                              <li id="dc4c64" style="background-color: #dc4c64; height: 40px;"><a class="dropdown-item" style="color: white;">pink</a></li>
                              <li id="e4a11b" style="background-color: #e4a11b; height: 40px;"><a class="dropdown-item" style="color: white;">orange</a></li>
                              <li id="8ac9de" style="background-color: #8ac9de; height: 40px;"><a class="dropdown-item" style="color: white;">sky</a></li>
                              <li id="123f6f" style="background-color: #123f6f; height: 40px;"><a class="dropdown-item" style="color: white;">navy</a></li>
                              <li id="115438" style="background-color: #115438; height: 40px;"><a class="dropdown-item" style="color: white;">green</a></li>

                            </ul>
                          </div>
                          <div id="checkChoiceColor" style="margin-left: 20px; margin-top: 3px;width: 30px; height: 30px; border: 1px solid; background-color: ${resData.cardColor}"></div>

                        </div>
                      </div>

                      <div class="modal-body mainModal" >
                          <div class="input-group rounded marginTop30" id="serarchmembersInput" data-mdb-input-init>
                            <label for="message-text" class="col-form-label boled" style="width: 100%;">
                              <i class="fa-solid fa-audio-description" style="color: #b7bdc8;"></i>
                              공개할 멤버
                            </label>
                            <div class="row">
                              <div type="search"
                                class="form-control rounded searchInput"
                                id="availableMembers"
                                style="width: 75%;">

                              </div>


                              <span class="input-group-text border-0 searchInput" id="membersSearchBtn" style="width: 20%; color: #6e6e6e; display: flex; text-align: center; align-items: center; justify-content: center; margin-left: auto;">
                                <button type="button" class="btn btn-light" id="availableMemberBtn">
                                  <i class="fas fa-search"> 검색</i>
                                </button>
                              </span>
                            </div>
                            <div id = "findUserName" style="margin-left: 45px;"></div>
                          </div>
                          <div class="input-group rounded marginTop30" id="serarchWorkersInput" data-mdb-input-init>
                            <label for="message-text" class="col-form-label boled" style="width: 100%;">
                              <i class="fa-solid fa-audio-description" style="color: #b7bdc8;"></i>
                              담당자
                            </label>
                            <div class="row">
                              <div
                                type="search"
                                class="form-control rounded searchInput"
                                id="workers"
                                style="width: 75%;"
                              ></div>

                              <span class="input-group-text border-0 searchInput" id="workersSearchBtn" style="width: 20%; color: #6e6e6e; display: flex; text-align: center; align-items: center; justify-content: center; margin-left: auto;">
                                <button type="button" class="btn btn-light">
                                  <i class="fas fa-search"> 검색</i>
                                </button>
                              </span>
                            </div>
                            <div id = "findWorkerName" style="margin-left: 45px;"></div>
                          </div>
                          <div class="input-group rounded marginTop30" id="dateInput" data-mdb-input-init>
                            <label for="message-text" class="col-form-label boled" style="width: 100%;">
                              <i class="fa-solid fa-audio-description" style="color: #b7bdc8;"></i>
                              기간
                            </label>
                            <div class="row">
                              <div
                                type="search"
                                class="form-control rounded searchInput"
                                id="startDate"
                                style="width: 22.6%;"
                              >${resData.startDate}</div>
                              <div
                                type="search"
                                class="form-control rounded searchInput"
                                id="endDate"
                                style="width: 22.6%;"
                              >${resData.endDate}</div>
                              <div
                                type="search"
                                class="form-control rounded searchInput"
                                id="endTime"
                                style="width: 22.6%;"
                              />${resData.endTime}</div>
                              <span class="input-group-text border-0 searchInput" id="datesSearchBtn" style="width: 20%; color: #6e6e6e; display: flex; text-align: center; align-items: center; justify-content: center; margin-left: auto;">
                                <button type="button" class="btn btn-light" style="font-weight: bolder;" id="dateSaveBtn">
                                  저장
                                </button>
                              </span>
                            </div>

                          </div>
                          <div class="col-mb-3 marginTop30">
                            <label for="message-text" class="col-form-label boled">
                              <i class="fa-solid fa-audio-description" style="color: #b7bdc8;"></i>
                              설명
                            </label>
                            <div class="inLeftTextArea">
                              <div class="form-control descriptionText" id="cardDescription"></div>
                            </div>
                          </div>
                          <div class="col-mb-3 marginTop30">
                            <label for="recipient-name" class="col-form-label boled">
                              <i class="fa-regular fa-comment" style="color: #b7bdc8;"></i>
                              댓글
                            </label>
                            <div class="inLeftTextArea">
                              <input type="text" class="form-control commentsInput" id="cardComments" placeholder="댓글을 적어주세요.">
                              <div class="comments">
                                <div class="commentsInfo"><b>@유빌리</b> <span>19:18:00</span></div>
                                <div class="commentsAndBtn">
                                  <div style="width: 70%;">트렐로뤨로뤠에에히이일로오오오 </div>
                                  <button type="button" class="commentsDelete btn btn-light"  style="width: 7%; margin-left: auto;">삭제</button>
                                </div>
                              </div>
                              <div class="comments">
                                <div class="commentsInfo"><b>@김두리</b> <span>21:18:00</span></div>
                                <div class="commentsAndBtn">
                                  <div style="width: 70%;">요들레이히이 트렐로가 아니라 일렐로가 더 좋네요~ </div>
                                  <button type="button" class="commentsDelete btn btn-light"  style="width: 7%; margin-left: auto;">삭제</button>
                                </div>
                              </div>
                            </div>
                          </div>
                      </div>

                      <div class="modal-footer eraseLine rightBtn">
                        <button type="button" class="btn btn-light" data-bs-dismiss="modal">취소</button>
                        <button type="button" class="btn btn-secondary">수정</button>
                      </div>
                    </div>
                  </div>
                </div>
              `;
          showModal.innerHTML = modalHtml;

          listsElement.appendChild(showModal);
        })
        .catch((err) => {
          console.log(err);
        });
    });
  });
</script>
