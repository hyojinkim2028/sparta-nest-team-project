<div class="px-4 pt-5 my-5 text-center">
  <div class="overflow-hidden" style="max-height: 30vh">
    <div class="container px-5">
      <img
        src="https://images.unsplash.com/photo-1504639725590-34d0984388bd?q=80&w=1074&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"
        class="img-fluid rounded-3 shadow-lg mb-4"
        width="900"
        height="600"
        style="position: relative; top: -300px; z-index: -1;"
      />
    </div>
  </div>
  <h1 class="display-4 mt-5 fw-bold text-body-emphasis">
    일렐로<span class="text-body-secondary" style="font-size: smaller">의</span>
    디테일
  </h1>
  <div class="col-lg-8 mx-auto">
    <h4 class="mb-4">어라... 이게 왜 됬지?</h4>
    <p class="lead mb-4">
      우리 프로젝트의 핵심은 사용자 경험의 편의성, 서버 사이드의 효율성, 보안, 그리고 체계적인 데이터 관리에 중점을 두었습니다. 직관적인 드래그앤 드롭 기능을 통해 사용자는 손쉽게 리스트와 카드를 조정할 수 있으며, 이는 프로젝트 관리의 유동성을 극대화합니다. App 컨트롤러에 구현된 랜더용 Get 요청은 서버 사이드에서의 원활한 페이지 렌더링을 가능하게 하며, 각 페이지와 기능들을 효과적으로 연결합니다. 또한, 쿠키를 이용한 인증 시스템은 사용자의 보안을 강화하고 안전한 접근을 보장합니다. 마지막으로, ERD를 활용한 체계적인 데이터베이스 설계는 프로젝트의 데이터 관리 및 운영의 기초를 견고히 합니다. 이 네 가지 요소는 우리 프로젝트의 기술적 깊이와 혁신을 대변하며, 사용자에게 최상의 경험을 제공하기 위한 우리의 끊임없는 노력을 반영합니다.
    </p>
  </div>
  <hr class="mt-5 mb-5">
  <br/>
  <!--~~ 설명들 시작 -->
  <div class="container px-5 ">
    <div class="row">
      <div class="col">
        <div class="colorscripter-code" style="color:#f0f0f0;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; width:600px; height:600px; overflow:auto"><table class="colorscripter-code-table" style="margin:0;padding:0;border:none;background-color:#272727;border-radius:4px;" cellspacing="0" cellpadding="0"><tr><td style="padding:6px;border-right:2px solid #4f4f4f"><div style="margin:0;padding:0;word-break:normal;text-align:right;color:#aaa;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important;line-height:130%"><div style="line-height:130%">1</div><div style="line-height:130%">2</div><div style="line-height:130%">3</div><div style="line-height:130%">4</div><div style="line-height:130%">5</div><div style="line-height:130%">6</div><div style="line-height:130%">7</div><div style="line-height:130%">8</div><div style="line-height:130%">9</div><div style="line-height:130%">10</div><div style="line-height:130%">11</div><div style="line-height:130%">12</div><div style="line-height:130%">13</div><div style="line-height:130%">14</div><div style="line-height:130%">15</div><div style="line-height:130%">16</div><div style="line-height:130%">17</div></div></td><td style="padding:6px 0;text-align:left"><div style="margin:0;padding:0;color:#f0f0f0;font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important;line-height:130%"><div style="padding:0 6px; white-space:pre; line-height:130%"><span style="color:#ff3399">import</span>&nbsp;{&nbsp;ExecutionContext,&nbsp;Injectable&nbsp;}&nbsp;<span style="color:#ff3399">from</span>&nbsp;<span style="color:#ffd500">'@nestjs/common'</span>;</div><div style="padding:0 6px; white-space:pre; line-height:130%"><span style="color:#ff3399">import</span>&nbsp;{&nbsp;AuthGuard&nbsp;}&nbsp;<span style="color:#ff3399">from</span>&nbsp;<span style="color:#ffd500">'@nestjs/passport'</span>;</div><div style="padding:0 6px; white-space:pre; line-height:130%">&nbsp;</div><div style="padding:0 6px; white-space:pre; line-height:130%">@Injectable()</div><div style="padding:0 6px; white-space:pre; line-height:130%"><span style="color:#ff3399">export</span>&nbsp;<span style="color:#ff3399">class</span>&nbsp;LoginOrNotGuard&nbsp;<span style="color:#ff3399">extends</span>&nbsp;AuthGuard(<span style="color:#ffd500">'jwt'</span>)&nbsp;{</div><div style="padding:0 6px; white-space:pre; line-height:130%">&nbsp;&nbsp;async&nbsp;canActivate(context:&nbsp;ExecutionContext):&nbsp;<span style="color:#4be6fa">Promise</span><span style="color:#ff3399">&lt;</span><span style="color:#ff3399">boolean</span><span style="color:#ff3399">&gt;</span>&nbsp;{</div><div style="padding:0 6px; white-space:pre; line-height:130%">&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#ff3399">try</span>&nbsp;{</div><div style="padding:0 6px; white-space:pre; line-height:130%">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;await&nbsp;<span style="color:#ff3399">super</span>.canActivate(context);</div><div style="padding:0 6px; white-space:pre; line-height:130%">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#ff3399">return</span>&nbsp;<span style="color:#ff3399">true</span>;</div><div style="padding:0 6px; white-space:pre; line-height:130%">&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span style="color:#ff3399">catch</span>&nbsp;(error)&nbsp;{</div><div style="padding:0 6px; white-space:pre; line-height:130%">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#ff3399">const</span>&nbsp;request&nbsp;<span style="color:#aaffaa"></span><span style="color:#ff3399">=</span>&nbsp;context.switchToHttp().getRequest();</div><div style="padding:0 6px; white-space:pre; line-height:130%">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;request.user&nbsp;<span style="color:#aaffaa"></span><span style="color:#ff3399">=</span>&nbsp;<span style="color:#4be6fa">null</span>;&nbsp;<span style="color:#999999">//&nbsp;사용자가&nbsp;없음</span></div><div style="padding:0 6px; white-space:pre; line-height:130%">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#ff3399">return</span>&nbsp;<span style="color:#ff3399">true</span>;&nbsp;<span style="color:#999999">//&nbsp;인증되지&nbsp;않았어도&nbsp;접근을&nbsp;허용</span></div><div style="padding:0 6px; white-space:pre; line-height:130%">&nbsp;&nbsp;&nbsp;&nbsp;}</div><div style="padding:0 6px; white-space:pre; line-height:130%">&nbsp;&nbsp;}</div><div style="padding:0 6px; white-space:pre; line-height:130%">}</div><div style="padding:0 6px; white-space:pre; line-height:130%">&nbsp;</div></div><div style="text-align:right;margin-top:-13px;margin-right:5px;font-size:9px;font-style:italic"><a href="http://colorscripter.com/info#e" target="_blank" style="color:#4f4f4ftext-decoration:none">Colored by Color Scripter</a></div></td><td style="vertical-align:bottom;padding:0 2px 4px 0"><a href="http://colorscripter.com/info#e" target="_blank" style="text-decoration:none;color:white"><span style="font-size:9px;word-break:normal;background-color:#4f4f4f;color:white;border-radius:10px;padding:1px">cs</span></a></td></tr></table></div>
      </div>
      <div class="col d-flex flex-column justify-content-between">
        <h3>LoginOrNotGuard</h3>
        <p class="lead mb-4">
          LoginOrNotGuard는 Nest.js에서 사용하는 커스텀 인증 가드로, JWT를 이용한 사용자 인증을 처리합니다. 인증에 성공하면 사용자에게 접근 권한을 부여하고, 실패해도 접근을 차단하지 않고 null로 설정된 사용자로 요청을 계속 진행합니다. 이를 통해 인증된 사용자와 비인증 사용자 모두가 특정 라우트에 접근할 수 있게 합니다.</p>
          <div>by 최이진</div>
      </div>
    </div>
  </div>
 <div class="row">하이</div>
</div>
